{"version":3,"sources":["socket.js","config.js","components/Header.js","components/Message.js","components/MessageList.js","components/MessageForm.js","components/NicknameForm.js","components/App.js","index.js"],"names":["useSocket","process","Header","mainText","secondaryText","Grid","container","justify","alignItems","Typography","component","variant","color","useStyles","makeStyles","theme","itemRight","display","justifyContent","textRight","flex","borderRadius","backgroundColor","palette","info","light","background","paper","padding","itemCenter","textCenter","secondary","RightMessage","classes","message","ListItem","className","ListItemText","primary","body","NotificationMessage","Message","currentUser","isNotification","type","isMyMsg","user","id","ListItemAvatar","Avatar","nickname","charAt","toUpperCase","ListItemSecondaryAction","moment","date","format","root","height","overflowY","margin","MessageList","messages","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","List","dense","map","msg","index","key","ref","input","marginLeft","spacing","iconButton","MessageForm","sendMessage","useState","setMessage","Paper","elevation","onSubmit","event","preventDefault","InputBase","autoComplete","autoFocus","name","onChange","target","value","placeholder","IconButton","aria-label","NicknameForm","sendNickname","setNickname","TextField","label","chat","flexDirection","width","login","App","setUser","setMessages","activeUsers","setActiveUsers","socket","on","data","console","log","newMessage","Date","off","uuidv4","emit","newUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30eacda1.chunk.js","sourcesContent":["import useSocket from 'socket.io-client';\nimport config from './config';\n\nexport default useSocket(config.socketURL);\n","export default {\n  socketURL: process.env.REACT_APP_SOCKET_URL\n};\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst Header = ({ mainText, secondaryText }) => {\n  return (\n    <Grid container justify=\"space-between\" alignItems=\"flex-end\">\n      <Typography component=\"h2\" variant=\"h5\" color=\"primary\">\n        {mainText}\n      </Typography>\n      <Typography color=\"textSecondary\">{secondaryText}</Typography>\n    </Grid>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport moment from 'moment';\nimport {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  itemRight: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  textRight: {\n    flex: '0 1 auto',\n    borderRadius: '25px',\n    backgroundColor: theme.palette.info.light,\n    color: theme.palette.background.paper,\n    padding: '3px 10px 3px 10px'\n  },\n  itemCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  textCenter: {\n    flex: '0 1 auto',\n    color: theme.palette.secondary.light\n  }\n}));\n\nconst RightMessage = ({ classes, message }) => {\n  return (\n    <ListItem className={classes.itemRight}>\n      <ListItemText className={classes.textRight} primary={message.body} />\n    </ListItem>\n  );\n};\n\nconst NotificationMessage = ({ classes, message }) => {\n  return (\n    <ListItem className={classes.itemCenter}>\n      <ListItemText className={classes.textCenter} primary={message.body} />\n    </ListItem>\n  );\n};\n\nconst Message = ({ message, currentUser }) => {\n  const classes = useStyles();\n  const isNotification = message.type === 'notification';\n  const isMyMsg = message.user.id === currentUser.id;\n\n  if (isNotification) {\n    return <NotificationMessage classes={classes} message={message} />;\n  }\n\n  if (isMyMsg) {\n    return <RightMessage classes={classes} message={message} />;\n  }\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>{message.user.nickname.charAt(0).toUpperCase()}</Avatar>\n      </ListItemAvatar>\n\n      <ListItemText primary={message.body} secondary={message.user.nickname} />\n\n      <ListItemSecondaryAction>\n        <Typography component=\"p\" variant=\"body2\" color=\"textSecondary\">\n          {moment(message.date).format('h:mm a')}\n        </Typography>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List } from '@material-ui/core';\n\nimport Message from './Message';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflowY: 'scroll',\n    margin: '10px 0 10px 0',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst MessageList = ({ messages, currentUser }) => {\n  const classes = useStyles();\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  return (\n    <List dense className={classes.root}>\n      {messages.map((msg, index) => (\n        <Message message={msg} currentUser={currentUser} key={index} />\n      ))}\n      <div ref={messagesEndRef} />\n    </List>\n  );\n};\n\nexport default MessageList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, InputBase, IconButton } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nconst MessageForm = ({ sendMessage }) => {\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (message) {\n      sendMessage(message);\n      setMessage('');\n    }\n  };\n\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const classes = useStyles();\n  return (\n    <Paper\n      className={classes.root}\n      component=\"form\"\n      elevation={2}\n      onSubmit={handleSubmit}\n    >\n      <InputBase\n        autoComplete=\"off\"\n        autoFocus\n        className={classes.input}\n        name=\"message\"\n        onChange={handleInputChange}\n        placeholder=\"Escriba aquí...\"\n        value={message}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        color=\"primary\"\n      >\n        <SendIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default MessageForm;\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst NicknameForm = ({ sendNickname }) => {\n  const [nickname, setNickname] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    sendNickname(nickname);\n    setNickname('');\n  };\n\n  const handleInputChange = event => {\n    setNickname(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        autoComplete=\"off\"\n        name=\"nickname\"\n        onChange={handleInputChange}\n        label=\"Nickname...\"\n        value={nickname}\n        variant=\"outlined\"\n      />\n    </form>\n  );\n};\n\nexport default NicknameForm;\n","import React, { useState, useEffect } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport socket from '../socket';\nimport Header from './Header';\nimport MessageList from './MessageList';\nimport MessageForm from './MessageForm';\nimport NicknameForm from './NicknameForm';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useStyles = makeStyles(theme => ({\n  chat: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    width: '400px',\n    height: '600px'\n  },\n  login: {\n    display: 'flex',\n    width: '400px',\n    height: '600px',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const initialUserState = {\n    id: null,\n    nickname: null\n  };\n  const [user, setUser] = useState(initialUserState);\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState(0);\n\n  useEffect(() => {\n    socket.on('message', data => {\n      console.log('Llegó mensaje...');\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n\n    socket.on('login', ({ activeUsers, user }) => {\n      console.log('Login');\n      console.log(user);\n      setUser(user);\n      setActiveUsers(activeUsers);\n    });\n\n    socket.on('new user', ({ activeUsers, user }) => {\n      const newMessage = {\n        body: `${user.nickname} se ha unido`,\n        date: new Date(),\n        type: 'notification',\n        user\n      };\n      setActiveUsers(activeUsers);\n      setMessages([...messages, newMessage]);\n    });\n\n    socket.on('left', ({ activeUsers, user }) => {\n      if (user) {\n        const newMessage = {\n          body: `${user.nickname} ha salido`,\n          date: new Date(),\n          type: 'notification',\n          user\n        };\n        setMessages([...messages, newMessage]);\n      }\n      setActiveUsers(activeUsers);\n    });\n\n    return () => {\n      socket.off('left');\n      socket.off('login');\n      socket.off('message');\n      socket.off('new user');\n    };\n  }, [messages, user, activeUsers]);\n\n  const handleSendMessage = message => {\n    const newMessage = { id: uuidv4(), body: message, date: new Date(), type: 'warning', user };\n    setMessages([...messages, newMessage]);\n    socket.emit('message', newMessage);\n  };\n\n  const handleSetNickname = nickname => {\n    const newUser = { ...user, nickname };\n    setUser(newUser);\n    console.log('handleSetNickname');\n    console.log(newUser);\n    socket.emit('join', newUser);\n  };\n\n  if (!user.id) {\n    return (\n      <Paper className={classes.login}>\n        <NicknameForm className={classes.login} sendNickname={handleSetNickname} />\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.chat}>\n      <Header\n        mainText=\"Notificador de mensajes\"\n        secondaryText={`${activeUsers} ${activeUsers !== 1 ? 'usuarios' : 'usuario'}`}\n      />\n      <MessageList messages={messages} currentUser={user} />\n      <MessageForm sendMessage={handleSendMessage} />\n    </Paper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}